# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `hash_diff` gem.
# Please instead update this file by running `bin/tapioca gem hash_diff`.

# source://hash_diff//lib/hash_diff/version.rb#1
module HashDiff
  private

  # source://hash_diff//lib/hash_diff.rb#17
  def diff(*args); end

  # source://hash_diff//lib/hash_diff.rb#21
  def left_diff(*args); end

  # source://hash_diff//lib/hash_diff.rb#25
  def right_diff(*args); end

  class << self
    # source://hash_diff//lib/hash_diff.rb#17
    def diff(*args); end

    # source://hash_diff//lib/hash_diff.rb#21
    def left_diff(*args); end

    # source://hash_diff//lib/hash_diff.rb#7
    def patch!; end

    # source://hash_diff//lib/hash_diff.rb#25
    def right_diff(*args); end
  end
end

# source://hash_diff//lib/hash_diff/comparison.rb#2
class HashDiff::Comparison
  # @return [Comparison] a new instance of Comparison
  #
  # source://hash_diff//lib/hash_diff/comparison.rb#3
  def initialize(left, right); end

  # source://hash_diff//lib/hash_diff/comparison.rb#10
  def diff; end

  # Returns the value of attribute left.
  #
  # source://hash_diff//lib/hash_diff/comparison.rb#8
  def left; end

  # source://hash_diff//lib/hash_diff/comparison.rb#14
  def left_diff; end

  # Returns the value of attribute right.
  #
  # source://hash_diff//lib/hash_diff/comparison.rb#8
  def right; end

  # source://hash_diff//lib/hash_diff/comparison.rb#18
  def right_diff; end

  protected

  # source://hash_diff//lib/hash_diff/comparison.rb#24
  def find_differences(&reporter); end

  private

  # @return [Boolean]
  #
  # source://hash_diff//lib/hash_diff/comparison.rb#54
  def array?(value); end

  # source://hash_diff//lib/hash_diff/comparison.rb#36
  def combined_keys; end

  # @return [Boolean]
  #
  # source://hash_diff//lib/hash_diff/comparison.rb#62
  def comparable_array?(key); end

  # @return [Boolean]
  #
  # source://hash_diff//lib/hash_diff/comparison.rb#58
  def comparable_hash?(key); end

  # source://hash_diff//lib/hash_diff/comparison.rb#30
  def comparison_strategy(reporter); end

  # @return [Boolean]
  #
  # source://hash_diff//lib/hash_diff/comparison.rb#46
  def equal?(key); end

  # @return [Boolean]
  #
  # source://hash_diff//lib/hash_diff/comparison.rb#50
  def hash?(value); end

  # source://hash_diff//lib/hash_diff/comparison.rb#66
  def report_difference(key, reporter); end

  # source://hash_diff//lib/hash_diff/comparison.rb#79
  def value_with_default(obj, key); end
end

# source://hash_diff//lib/hash_diff.rb#5
class HashDiff::NO_VALUE; end

# source://hash_diff//lib/hash_diff/version.rb#2
HashDiff::VERSION = T.let(T.unsafe(nil), String)
